{"version":3,"file":"components-signup-signup-stories.iframe.bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAGA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAzJA","sources":["webpack://denanu-login/./node_modules/@mui/icons-material/Email.js","webpack://denanu-login/./src/components/api/signup.tsx","webpack://denanu-login/./src/components/signup/signup.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\nexports.default = _default;","import {sha512} from 'crypto-hash';\nimport { Token } from './Token';\n\nexport function booleanToString(val?: boolean) {\n  return val ? \"true\" : \"false\";\n}\n\nexport async function signup(urlApi: string, handleError: (reason: string) => void, onSuccess: VoidFunction, username?: string, email?: string, password?: string, remember?: boolean, sendmail?: boolean) {\n  if (username && email && password) {\n    const data = await fetch(urlApi + \"/signup.php?\" + new URLSearchParams({\n      username: username,\n      mail: email,\n      remember: booleanToString(remember),\n      password: await sha512(password),\n      sendmail: booleanToString(sendmail),\n    }))\n    .then(r => r.json());\n\n    if (data.status === \"success\") {\n      onSuccess();\n    }\n    else if (data.status === \"fail\") {\n      handleError(data.reason)\n    }\n  }\n}","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { signup } from '../api/signup';\nimport useToken from '../api/Token';\nimport { SxProps, Theme } from '@mui/material';\nimport EmailIcon from '@mui/icons-material/Email';\n\n\n\ninterface SignUpProps {\n  emailUpdates?: boolean;\n  backendLocation: string;\n}\n\nexport default function SignUp(props: SignUpProps) {\n  const { emailUpdates, backendLocation } = props;\n\n  const [ unameError, setUnameError ] = React.useState(false);\n  const [ emailError, setEmailError ] = React.useState(false);\n  const [ pswrdError, setPswrdError ] = React.useState(false);\n  const [ awaitAuthentication, setAwaitAuthentication ] = React.useState(false);\n\n  const [ unameErrorMsg, setUnameErrorMsg ] = React.useState<string | undefined>(undefined);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const uname = data.get(\"user-name\")?.toString();\n    const email = data.get(\"email\")?.toString();\n    const pswrd = data.get(\"password\")?.toString();\n    const memo = data.get(\"remember\")?.valueOf() as boolean | undefined;\n    const sendmail = data.get(\"receiveEmails\")?.toString() as boolean | undefined;\n    setUnameErrorMsg(undefined);\n\n    signup(\n      backendLocation, \n      reason => {\n        if (reason === \"uname Exists\") {\n          setUnameErrorMsg(\"Username already exists\");\n        }\n      },\n      () => {\n        setAwaitAuthentication(true);\n      },\n      uname, \n      email, \n      pswrd, \n      memo, \n      sendmail\n    );\n\n    setUnameError(uname === \"\");\n    setEmailError(email === \"\");\n    setPswrdError(pswrd === \"\");\n  };\n\n  const baseBoxSx: SxProps<Theme> = {\n    marginTop: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  }\n\n  if (awaitAuthentication) {\n    return (\n      <Container maxWidth=\"xs\">\n        <Box sx={baseBoxSx}>\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <EmailIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            E-Mail verification\n          </Typography>\n          Please verify your E-Mail\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box\n        sx={baseBoxSx}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"user-name\"\n                label=\"User Name\"\n                name=\"user-name\"\n                autoComplete=\"user-name\"\n                error={unameError || Boolean(unameErrorMsg)}\n                helperText={unameErrorMsg}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                error={emailError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                error={pswrdError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value={true} color=\"primary\" />}\n                label=\"Remember me\"\n                name=\"remember\"\n              />\n            </Grid>\n            {\n              emailUpdates ?\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={<Checkbox value={true} color=\"primary\" />}\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                    name=\"receiveEmails\"\n                  />\n                </Grid>\n              :\n                null\n            }\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}"],"names":[],"sourceRoot":""}